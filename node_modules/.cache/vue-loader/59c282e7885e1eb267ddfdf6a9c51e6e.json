{"remainingRequest":"/Users/danieletribuzio/Documents/GitHub/website/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/danieletribuzio/Documents/GitHub/website/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/danieletribuzio/Documents/GitHub/website/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/danieletribuzio/Documents/GitHub/website/src/views/About.vue?vue&type=template&id=039c5b43&","dependencies":[{"path":"/Users/danieletribuzio/Documents/GitHub/website/src/views/About.vue","mtime":1613068543043},{"path":"/Users/danieletribuzio/Documents/GitHub/website/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/danieletribuzio/Documents/GitHub/website/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/danieletribuzio/Documents/GitHub/website/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/danieletribuzio/Documents/GitHub/website/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}