{"remainingRequest":"/Users/danieletribuzio/Documents/GitHub/website/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/danieletribuzio/Documents/GitHub/website/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/danieletribuzio/Documents/GitHub/website/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/danieletribuzio/Documents/GitHub/website/src/views/Home.vue?vue&type=template&id=fae5bece&","dependencies":[{"path":"/Users/danieletribuzio/Documents/GitHub/website/src/views/Home.vue","mtime":1612714135104},{"path":"/Users/danieletribuzio/Documents/GitHub/website/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/danieletribuzio/Documents/GitHub/website/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/danieletribuzio/Documents/GitHub/website/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/danieletribuzio/Documents/GitHub/website/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKAogICAgInYtcGFyYWxsYXgiLAogICAgeyBhdHRyczogeyBzcmM6IHJlcXVpcmUoIkAvYXNzZXRzL2JhY2tncm91bmQucG5nIiksIGhlaWdodDogX3ZtLmhlaWdodCB9IH0sCiAgICBbCiAgICAgIF9jKAogICAgICAgICJ2LXJvdyIsCiAgICAgICAgeyBzdGF0aWNTdHlsZTogeyAibWFyZ2luLXRvcCI6ICI1JSIgfSwgYXR0cnM6IHsganVzdGlmeTogImNlbnRlciIgfSB9LAogICAgICAgIFsKICAgICAgICAgIF9jKAogICAgICAgICAgICAidi1jb2wiLAogICAgICAgICAgICB7IGF0dHJzOiB7IGxnOiAiMyIsIHNtOiAiNiIsIHhzOiAiNyIsIG1kOiAiNCIgfSB9LAogICAgICAgICAgICBbCiAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAidi1jYXJkIiwKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJjYXJkX2lkIiwKICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgY29sb3I6ICJyZ2IoMjU1LCAyNTUsIDI1NSwgMC4wKSIsIGVsZXZhdGlvbjogIjEwIiB9CiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAidi1yb3ciLAogICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICAgICAidi1jb2wiLAogICAgICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAidi1hdmF0YXIiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogIm1hLTciLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogeyBjb2xvcjogImdyZXkgbGlnaHRlbi0yIiwgc2l6ZTogIjIwNSIgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3JjOiByZXF1aXJlKCJAL2Fzc2V0cy9hdmF0YXIuanBnIiksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhbHQ6ICJEYW5pZWxlIFRyaWJ1emlvIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAidGV4dC1oNCBmb250LXdlaWdodC10aGluIiB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoIiBEYW5pZWxlICIpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYygiYnIiKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KCIgVHJpYnV6aW8gIikKICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJociIsIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDogIjJweCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiAiMTUlIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIm1hcmdpbi1sZWZ0IjogImF1dG8iLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAibWFyZ2luLXJpZ2h0IjogImF1dG8iLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAibWFyZ2luLXRvcCI6ICIyMHB4IiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIm1hcmdpbi1ib3R0b20iOiAiMjBweCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJib3JkZXItd2lkdGgiOiAiMCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yOiAiI0Y4OTkxNSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJiYWNrZ3JvdW5kLWNvbG9yIjogIiNGODk5MTUiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJ0ZXh0LW92ZXJsaW5lIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljU3R5bGU6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAibWFyZ2luLXRvcCI6ICIyMHB4IiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAibWFyZ2luLWJvdHRvbSI6ICIyMHB4IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgW192bS5fdigiIERhdGEgU2NpZW5jZSBTdHVkZW50ICIpXQogICAgICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAidi1jYXJkLWFjdGlvbnMiLAogICAgICAgICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJ0ZXJ6aWFyaW8ganVzdGlmeS1jZW50ZXIiIH0sCiAgICAgICAgICAgICAgICAgICAgX3ZtLl9sKF92bS5pY29ucywgZnVuY3Rpb24oaWNvbikgewogICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF9jKAogICAgICAgICAgICAgICAgICAgICAgICAidi1idG4iLAogICAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICAga2V5OiBpY29uLmljb24sCiAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJteC00IG15LTQiLAogICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpY29uOiAiIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yOiAid2hpdGUiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgaHJlZjogaWNvbi5saW5rLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgdGFyZ2V0OiAiX2JsYW5rIgogICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJ2LWljb24iLCB7IGF0dHJzOiB7IHNpemU6ICIzMHB4IiB9IH0sIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdigiICIgKyBfdm0uX3MoaWNvbi5pY29uKSArICIgIikKICAgICAgICAgICAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICkKICAgICAgICAgICAgXSwKICAgICAgICAgICAgMQogICAgICAgICAgKSwKICAgICAgICAgIF9jKAogICAgICAgICAgICAidi1jb2wiLAogICAgICAgICAgICB7IGF0dHJzOiB7IGxnOiAiNiIsIHNtOiAiMTAiLCB4czogIjciLCBtZDogIjciIH0gfSwKICAgICAgICAgICAgWwogICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgInYtY2FyZCIsCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAidGV4dGNhcmQgdGV4dC1jZW50ZXIgdGV4dC1tZC1sZWZ0IHRleHQtbGctbGVmdCIsCiAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IGNvbG9yOiAicmdiKDI1NSwgMjU1LCAyNTUsIDAuMCkiLCBlbGV2YXRpb246ICIwIiB9CiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInRleHQtbGctaDEgdGV4dC1tZC1oMSB0ZXh0LWgyIiB9LCBbCiAgICAgICAgICAgICAgICAgICAgX3ZtLl92KCIgSGVsbG8gIikKICAgICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAidGV4dC1oNSBmb250LXdlaWdodC10aGluIiB9LCBbCiAgICAgICAgICAgICAgICAgICAgX3ZtLl92KCIgSGVyZSdzIHdobyBJIGFtICYgd2hhdCBJIGRvICIpCiAgICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAidi1idG4iLAogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAibXktNSBtci01IG15LWxnLTUiLAogICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICAgICAgcm91bmRlZDogIiIsCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yOiAidGVyemlhcmlvIiwKICAgICAgICAgICAgICAgICAgICAgICAgZGFyazogIiIsCiAgICAgICAgICAgICAgICAgICAgICAgIGxhcmdlOiAiIgogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgW192bS5fdigiIFBvcnRmb2xpbyAiKV0KICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgInYtYnRuIiwKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogIm15LTEwIiwKICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgICAgIHJvdW5kZWQ6ICIiLAogICAgICAgICAgICAgICAgICAgICAgICBvdXRsaW5lZDogIiIsCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yOiAidGVyemlhcmlvIiwKICAgICAgICAgICAgICAgICAgICAgICAgbGFyZ2U6ICIiCiAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICBbX3ZtLl92KCIgQWJvdXQgTWUgIildCiAgICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgIGNsYXNzOiBbCiAgICAgICAgICAgICAgICAgICAgICAgICJ0ZXh0LWxnLWJvZHktMSB0ZXh0LWp1c3RpZnkgdGV4dC1tZC1ib2R5LTEgdGV4dC1ib2R5LTEgIiArCiAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLmNvbG9yICsKICAgICAgICAgICAgICAgICAgICAgICAgICAiIG1iLTEwIgogICAgICAgICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAgICAgICAgICAgICAiIEknbSBhIHBhcmFncmFwaC4gQ2xpY2sgaGVyZSB0byBhZGQgeW91ciBvd24gdGV4dCBhbmQgZWRpdCBtZS4gSXTigJlzIGVhc3kuIEp1c3QgY2xpY2sg4oCcRWRpdCBUZXh04oCdIG9yIGRvdWJsZSBjbGljayBtZSB0byBhZGQgeW91ciBvd24gY29udGVudCBhbmQgbWFrZSBjaGFuZ2VzIHRvIHRoZSBmb250LiBJJ20gYSBwYXJhZ3JhcGguIENsaWNrIGhlcmUgdG8gYWRkIHlvdXIgb3duIHRleHQgYW5kIGVkaXQgbWUuIEl04oCZcyBlYXN5LiBKdXN0IGNsaWNrIOKAnEVkaXQgVGV4dOKAnSBvciBkb3VibGUgY2xpY2sgbWUgdG8gYWRkIHlvdXIgb3duIGNvbnRlbnQgYW5kIG1ha2UgY2hhbmdlcyB0byB0aGUgZm9udC4gIgogICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICApCiAgICAgICAgICAgIF0sCiAgICAgICAgICAgIDEKICAgICAgICAgICkKICAgICAgICBdLAogICAgICAgIDEKICAgICAgKQogICAgXSwKICAgIDEKICApCn0KdmFyIHN0YXRpY1JlbmRlckZucyA9IFtdCnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZQoKZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfQ=="}]}